// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  
  name String
  email String @unique
  password String?
  provider String?
  permissions Int @default(0)

  providerfk Provider? @relation(fields: [provider], references: [id])
  workspace Workspace[]
  wk_member_relation Workspace_member[]
  subject_relation Subject[]
  subject_user_relation Subject_User[]

}

model Provider{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  name String
  users User[]
}

model Workspace{
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name String
  owner String
  description String?

  user_owner User @relation(fields: [owner], references: [id])
  wk_member_relation Workspace_member[]
  wcategory_relation Workspace_category[]

}

model Workspace_member{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  workspace_id String
  user_id String
  role Int

  workspace_relation Workspace @relation(fields: [workspace_id],references: [id])
  user_relation User @relation(fields: [user_id],references: [id])

}

model Workspace_category{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  workspace_id String
  category_id String

  workspace_relation Workspace @relation(fields: [workspace_id],references: [id])
  category_relation Category @relation(fields: [category_id],references: [id])
}

model Category{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  name String
  type Int
  password String?
  description String?

  wspace_relation Workspace_category[]
  Csubject_relation Category_subject[]
}

model Category_subject{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  category_id String
  subject_id String

  category_relation Category @relation(fields: [category_id],references: [id])
  subject_relation Subject @relation(fields: [subject_id],references: [id])
  
}

model Subject{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  name String
  owner_id String
  description String?

  Csubject_relation Category_subject[]
  owner_relation User @relation(fields: [owner_id],references: [id])
  schedule_relation Schedule[]
  subject_user_relation Subject_User[]

}

model Schedule{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  subject_id String
  subj_relation Subject @relation(fields: [subject_id],references: [id])

}

model Time{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  time_start DateTime
  time_end DateTime
  day String

  day_relation Day @relation(fields: [day],references: [id])
}

model Day{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  day String

  time_relation Time[]
}

model Subject_User{
    id String @id @default(auto()) @map("_id") @db.ObjectId

  user_id String
  subject_id String

  user_relation User @relation(fields: [user_id],references: [id])
  subject_relation Subject @relation(fields: [subject_id],references: [id])
}